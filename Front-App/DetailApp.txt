1. Tree App
/Front-End
  /assets              
    /fonts              # Font chữ (NotoSansKR, Roboto, v.v.)
    /images             # Hình ảnh minh họa, logo, splash
      logo.png
      splash.png
    /icons              # Icon PNG hoặc SVG
      home.png
      video.png
      rank.png
  /components           
    Button.js           # Nút bấm chung
    Card.js             # Thành phần thẻ hiển thị
    Header.js           # Thanh tiêu đề
    ProgressBar.js      # Thanh tiến trình
    VideoPlayer.js      # Thành phần phát video
  /data                 
    lessons.json        # Danh sách bài học
    vocabulary.json     # Dữ liệu từ vựng
    videoQuestions.json # Dữ liệu câu hỏi từ video
  /navigation           
    AppNavigator.js     # Điều hướng chính (Stack)
    TabNavigator.js     # Điều hướng dạng tab
    DrawerNavigator.js  # Điều hướng dạng Drawer
  /screens  
    /Auth               # Thư mục Đăng nhập/Đăng ký
      LoginScreen.js    # Màn hình Đăng nhập
      RegisterScreen.js # Màn hình Đăng ký
      AuthStyles.js     # Style cho các màn hình Auth         
    /Home               # Màn hình trang chủ
      HomeScreen.js
      HomeStyles.js
    /Lessons            # Màn hình bài học
      LessonsScreen.js
      LessonDetailScreen.js
      LessonsStyles.js
    /OnBroadingPage
      OnBroadingPage1.js
      OnBroadingPage2.js
    /Practice           # Màn hình luyện tập
      PracticeScreen.js
      FlashcardScreen.js
      QuizScreen.js
      PracticeStyles.js
    /Video              # Màn hình xem phim
      VideoScreen.js
      VideoQuestionScreen.js
      VideoStyles.js
    /Rankings           # Màn hình xếp hạng
      RankingsScreen.js
      RankingsStyles.js
    /Profile            # Màn hình hồ sơ
      ProfileScreen.js
      EditProfileScreen.js
      ProfileStyles.js
    /Settings           # Màn hình cài đặt
      SettingsScreen.js
      SettingsStyles.js
  /styles               
    colors.js           # Màu sắc toàn cục
    globalStyles.js     # Style toàn cục
    typography.js       # Font chữ và kích cỡ
  /utils                
    constants.js        # Giá trị cố định
    helpers.js          # Hàm tiện ích chung
    asyncStorage.js     # Tích hợp AsyncStorage
    validators.js       # Bộ kiểm tra dữ liệu
  App.js                # Entry point của ứng dụng
/backend
   /models
       - User.js
       - Lesson.js
       - VideoQuestion.js
   /routes
       - auth.js
       - lessons.js
       - rankings.js
   /controllers
       - authController.js
       - lessonController.js
       - rankingController.js
   /utils
       - db.js
   server.js
  Chi tiết từng mục
1. /assets
fonts/: Font chữ đặc biệt (ví dụ: NotoSansKR cho tiếng Hàn).
images/: Logo, hình ảnh nền splash, hoặc hình minh họa bài học.
icons/: Biểu tượng PNG/SVG dùng cho navigation hoặc nút bấm.
2. /components
Button.js: Nút bấm chung với style đồng nhất, hỗ trợ tùy chỉnh.
Card.js: Thành phần thẻ hiển thị (dùng trong bài học hoặc từ điển).
TabNavigator.js: Giao diện thanh tab điều hướng giữa các màn hình.
Header.js: Thanh tiêu đề hiển thị trên mỗi màn hình.
ProgressBar.js: Thanh tiến trình hiển thị mức độ hoàn thành bài học.
3. /data
Dữ liệu mẫu JSON:
lessons.json: Danh sách các bài học với chủ đề và cấp độ.
vocabulary.json: Từ vựng mẫu dùng cho từ điển.
4. /navigation
AppNavigator.js: Cấu hình điều hướng chính (stack/drawer navigation).
TabNavigator.js: Điều hướng giữa các tab chính (Home, Lessons, Practice, Profile).
5. /screens
Tổ chức màn hình theo module để dễ quản lý:
/Home/: Trang tổng quan, hiển thị tiến trình và gợi ý bài học.
/Lessons/: Danh sách bài học và chi tiết từng bài học.
/Practice/: Các tính năng luyện tập như flashcards, bài kiểm tra.
/Dictionary/: Từ điển và chi tiết từ vựng (nghĩa, phát âm).
/Profile/: Thông tin và tùy chỉnh cá nhân.
/Progress/: Tiến trình học tập.
/Settings/: Tùy chỉnh ứng dụng (theme, ngôn ngữ).
6. /styles
colors.js: Định nghĩa các màu chung (primary, secondary, background).
globalStyles.js: Các style dùng chung cho toàn ứng dụng.
typography.js: Kích thước, font chữ cho tiêu đề, đoạn văn.
7. /utils
constants.js: Giá trị cố định như URL API, mức độ bài học.
helpers.js: Hàm tiện ích như định dạng ngày, shuffle array.
validators.js: Bộ kiểm tra dữ liệu đầu vào (text, email).
1. Tab "Video"
VideoScreen.js: Hiển thị danh sách video ngắn (tập trung vào các đoạn phim tiếng Hàn).
VideoQuestionScreen.js: Sau khi xem xong, người dùng sẽ trả lời câu hỏi liên quan đến nội dung phim (lấy từ videoQuestions.json).
VideoPlayer.js: Thành phần phát video, sử dụng react-native-video hoặc expo-av.
2. Tab "Rankings"
Hiển thị bảng xếp hạng điểm số của người dùng.
Dữ liệu được lưu trữ và truy xuất từ AsyncStorage để duy trì trạng thái.
1. LoginScreen.js
Giao diện đăng nhập với các trường:
Email.
Mật khẩu.
Nút Đăng nhập và liên kết đến màn hình Đăng ký.
Xử lý lưu thông tin phiên người dùng bằng AsyncStorage.
2. RegisterScreen.js
Giao diện đăng ký với các trường:
Tên người dùng.
Email.
Mật khẩu.
Xác nhận mật khẩu.
Nút Đăng ký để tạo tài khoản
####################################################################################################################################################################################################
Phân tích Back-End cho ứng dụng App_Learn_KOREAN


I. Cấu trúc dữ liệu trong Database
Dựa vào code Front-End, Back-End cần quản lý các model dữ liệu sau:

1. User (Người dùng)
username: String (tên đăng nhập)
email: String (email người dùng)
password: String (mật khẩu đã mã hóa)
avatar: String (đường dẫn đến ảnh đại diện)
score: Number (điểm thành tích)
gold: Number (tiền ảo trong ứng dụng)
diamond: Number (kim cương - loại tiền ảo cao cấp)
lessons: Array (danh sách ID các bài học đã hoàn thành)
level: Number (cấp độ người dùng)
experience: Number (điểm kinh nghiệm)
dailyStreak: Number (số ngày học liên tiếp)
lastLogin: Date (thời gian đăng nhập cuối)
achievements: Array (thành tựu đã đạt được)


2. Lesson (Bài học)
lessonId: String (mã định danh bài học)
title: String (tiêu đề bài học)
description: String (mô tả bài học)
category: String (loại bài học: ngữ pháp, từ vựng, v.v.)
level: Number (độ khó)
content: Array (nội dung bài học)
exercises: Array (bài tập trong bài học)
isPremium: Boolean (bài học miễn phí hay trả phí)

3. Achievement (Thành tựu)
achievementId: String (mã định danh)
title: String (tiêu đề thành tựu)
description: String (mô tả thành tựu)
icon: String (biểu tượng thành tựu)
reward: Object (phần thưởng khi đạt được)
requirement: Object (yêu cầu để đạt được)

4. DailyMission (Nhiệm vụ hàng ngày)
missionId: String (mã định danh)
title: String (tiêu đề nhiệm vụ)
description: String (mô tả nhiệm vụ)
reward: Object (phần thưởng)
requirement: Object (yêu cầu hoàn thành)
expiryDate: Date (thời hạn)

5. Vocabulary (Từ vựng)
word: String (từ vựng tiếng Hàn)
pronunciation: String (phát âm)
meaning: String (nghĩa tiếng Việt/Anh)
example: String (ví dụ)
category: String (chủ đề)
level: Number (độ khó)

6. Tournament (Giải đấu)
tournamentId: String (mã định danh)
title: String (tên giải đấu)
startDate: Date (ngày bắt đầu)
endDate: Date (ngày kết thúc)
participants: Array (danh sách người tham gia)
rewards: Object (phần thưởng)
rules: String (luật chơi)

II. Các API Endpoint cần thiết
1. Authentication (Xác thực)
POST /register: Đăng ký tài khoản mới
POST /login: Đăng nhập
POST /logout: Đăng xuất
GET /profile: Lấy thông tin profile người dùng
POST /upload-avatar: Tải lên ảnh đại diện
PUT /update-profile: Cập nhật thông tin cá nhân

2. Lesson Management (Quản lý bài học)
GET /lessons: Lấy danh sách bài học
GET /lessons/:id: Lấy chi tiết một bài học
POST /lessons/:id/complete: Đánh dấu bài học đã hoàn thành
GET /lessons/categories: Lấy danh sách chủ đề bài học

3. Ranking System (Hệ thống xếp hạng)
GET /rankings: Lấy bảng xếp hạng người dùng
GET /rankings/user/:id: Lấy chi tiết xếp hạng của người dùng

4. Achievement System (Hệ thống thành tựu)
GET /achievements: Lấy danh sách tất cả thành tựu
GET /achievements/user: Lấy thành tựu của người dùng hiện tại
POST /achievements/:id/claim: Nhận phần thưởng từ thành tựu

5. Daily Mission System (Hệ thống nhiệm vụ hàng ngày)
GET /daily-missions: Lấy danh sách nhiệm vụ hàng ngày
POST /daily-missions/:id/complete: Đánh dấu hoàn thành nhiệm vụ
POST /daily-missions/:id/claim: Nhận phần thưởng nhiệm vụ

6. Vocabulary (Từ vựng)
GET /vocabulary: Lấy danh sách từ vựng
GET /vocabulary/category/:category: Lấy từ vựng theo chủ đề
GET /vocabulary/search?q=...: Tìm kiếm từ vựng

7. Tournament System (Hệ thống giải đấu)
GET /tournaments: Lấy danh sách giải đấu
GET /tournaments/:id: Lấy chi tiết giải đấu
POST /tournaments/:id/join: Tham gia giải đấu
GET /tournaments/:id/leaderboard: Bảng xếp hạng giải đấu

8. Friend System (Hệ thống bạn bè)
GET /friends: Lấy danh sách bạn bè
POST /friends/add/:userId: Gửi lời mời kết bạn
POST /friends/accept/:userId: Chấp nhận lời mời kết bạn
POST /friends/challenge/:userId: Thách đấu bạn bè

9. Notification System (Hệ thống thông báo)
GET /notifications: Lấy danh sách thông báo
POST /notifications/mark-as-read: Đánh dấu thông báo đã đọc
POST /notifications/mark-all-as-read: Đánh dấu tất cả thông báo đã đọc


III. Các chức năng chính cần phát triển
1. Hệ thống xác thực (Authentication)
Đăng ký, đăng nhập, đăng xuất
Xác thực JWT (JSON Web Token) để bảo vệ các API endpoint
Quản lý session và refresh token

2. Hệ thống quản lý người dùng
Lưu trữ và cập nhật thông tin người dùng
Quản lý ảnh đại diện (upload và lưu trữ)
Theo dõi tiến trình học tập

3. Hệ thống gamification
Tính toán và cập nhật điểm kinh nghiệm (exp)
Quản lý cấp độ và thăng cấp (level up)
Phần thưởng đăng nhập hàng ngày (daily rewards)
Hệ thống thành tựu (achievements)

4. Bảng xếp hạng và thống kê
Tính toán và cập nhật bảng xếp hạng
Thống kê dữ liệu học tập của người dùng
Theo dõi số ngày học liên tiếp (streak)

5. Quản lý nội dung học tập
Tổ chức và cung cấp bài học, bài tập
Theo dõi tiến trình bài học của người dùng
Quản lý nội dung premium (trả phí)

6. Hệ thống thông báo
Thông báo hoàn thành nhiệm vụ
Thông báo nhận thành tựu mới
Thông báo về các sự kiện và giải đấu


Kiểm tra đầu vào với JSON Schema (đã thấy trong loginSchema.js và registerSchema.js)
Xử lý tải lên file an toàn (đã thấy trong routes/auth.js)
Cần thêm xác thực email và khôi phục mật khẩu
#####################################################################################################################################